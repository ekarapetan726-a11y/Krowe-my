<!doctype html>
<html lang="ru">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<title>Krowe ‚Äî –ü–µ—Ä–µ–¥–∞—á–∞ —Ñ–∞–π–ª–æ–≤</title>

<!-- –®—Ä–∏—Ñ—Ç—ã –∏ —Å—Ç–∏–ª—å -->
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&family=Orbitron:wght@600&display=swap" rel="stylesheet">

<style>
  body {
    background: radial-gradient(circle at 20% 20%, rgba(155,89,255,0.08), transparent 60%),
                radial-gradient(circle at 80% 80%, rgba(110,231,249,0.06), transparent 60%),
                #0b0f14;
    color: white;
    font-family: "Inter", sans-serif;
    display: flex;
    justify-content: center;
    align-items: flex-start;
    min-height: 100vh;
    padding: 40px 20px;
  }
  .container {
    max-width: 620px;
    width: 100%;
    background: rgba(255,255,255,0.04);
    border: 1px solid rgba(255,255,255,0.1);
    border-radius: 16px;
    padding: 32px;
    backdrop-filter: blur(14px);
    box-shadow: 0 0 40px rgba(155,89,255,0.1);
  }
  h1 {
    font-family: "Orbitron", sans-serif;
    font-size: 42px;
    text-align: center;
    background: linear-gradient(90deg, #6EE7F9, #9B59FF);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    margin-bottom: 8px;
  }
  .subtitle {
    text-align: center;
    color: rgba(255,255,255,0.7);
    margin-bottom: 24px;
  }
  .btn {
    background: linear-gradient(90deg, #6EE7F9, #9B59FF);
    border: none;
    padding: 12px 20px;
    border-radius: 10px;
    color: #000;
    font-weight: 600;
    cursor: pointer;
    transition: 0.2s;
  }
  .btn:hover {
    transform: scale(1.04);
  }
  .btn.secondary {
    background: transparent;
    border: 1px solid rgba(255,255,255,0.3);
    color: white;
  }
  #fileList li {
    margin: 6px 0;
    background: rgba(255,255,255,0.05);
    padding: 8px;
    border-radius: 8px;
  }
  .instructions {
    margin-top: 30px;
    font-size: 15px;
    color: rgba(255,255,255,0.8);
  }
  .hidden { display:none; }
</style>
</head>
<body>

<div class="container">
  <h1>Krowe</h1>
  <p class="subtitle">–ü–µ—Ä–µ–¥–∞–π —Ñ–∞–π–ª—ã –º–µ–∂–¥—É –ü–ö –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º üîó</p>

  <div id="auth">
    <button id="loginBtn" class="btn">–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google</button>
  </div>

  <div id="upload" class="hidden">
    <p>–ü—Ä–∏–≤–µ—Ç, <span id="userName"></span>!</p>
    <input type="file" id="fileInput" />
    <button id="uploadBtn" class="btn">–ó–∞–≥—Ä—É–∑–∏—Ç—å</button>

    <h3>üìÅ –ú–æ–∏ —Ñ–∞–π–ª—ã:</h3>
    <ul id="fileList"></ul>

    <button id="logoutBtn" class="btn secondary">–í—ã–π—Ç–∏</button>
  </div>

  <div class="instructions">
    <h3>üßæ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è</h3>
    <ol>
      <li>–ó–∞–π–¥–∏ –Ω–∞ —Å–∞–π—Ç <b>Krowe</b> –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ.</li>
      <li>–ù–∞–∂–º–∏ <b>¬´–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google¬ª</b>.</li>
      <li>–í—ã–±–µ—Ä–∏ —Ñ–∞–π–ª –∏ –Ω–∞–∂–º–∏ <b>¬´–ó–∞–≥—Ä—É–∑–∏—Ç—å¬ª</b>.</li>
      <li>–¢–µ–ø–µ—Ä—å –æ—Ç–∫—Ä–æ–π —Å–∞–π—Ç –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ, –≤–æ–π–¥–∏ —Ç–µ–º –∂–µ –∞–∫–∫–∞—É–Ω—Ç–æ–º.</li>
      <li>–°–∫–∞—á–∞–π —Å–≤–æ–π —Ñ–∞–π–ª üéâ</li>
    </ol>
  </div>
</div>

<script type="module">
  /* === –í–°–¢–ê–í–¨ –°–í–û–ô –ö–û–î FIREBASE –°–Æ–î–ê === */
  const firebaseConfig = {
    apiKey: "AIzaSyAq4dfEnveV2kYnr3TxA376POPuWYI6p5I",
    authDomain: "krowe-app.firebaseapp.com",
    projectId: "krowe-app",
    storageBucket: "krowe-app.firebasestorage.app",
    messagingSenderId: "638142805957",
    appId: "1:638142805957:web:4ad945e442abeca4ff7dac"
  };

  /* === –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ === */
  import { initializeApp } from "https://www.gstatic.com/firebasejs/11.0.1/firebase-app.js";
  import { getAuth, GoogleAuthProvider, signInWithPopup, signOut, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/11.0.1/firebase-auth.js";
  import { getStorage, ref, uploadBytes, listAll, getDownloadURL } from "https://www.gstatic.com/firebasejs/11.0.1/firebase-storage.js";

  const app = initializeApp(firebaseConfig);
  const auth = getAuth(app);
  const provider = new GoogleAuthProvider();
  const storage = getStorage(app);

  const loginBtn = document.getElementById('loginBtn');
  const logoutBtn = document.getElementById('logoutBtn');
  const uploadDiv = document.getElementById('upload');
  const authDiv = document.getElementById('auth');
  const uploadBtn = document.getElementById('uploadBtn');
  const fileInput = document.getElementById('fileInput');
  const fileList = document.getElementById('fileList');
  const userName = document.getElementById('userName');

  loginBtn.onclick = () => signInWithPopup(auth, provider);
  logoutBtn.onclick = () => signOut(auth);

  onAuthStateChanged(auth, (user) => {
    if (user) {
      authDiv.classList.add('hidden');
      uploadDiv.classList.remove('hidden');
      userName.textContent = user.displayName;
      loadFiles(user);
    } else {
      authDiv.classList.remove('hidden');
      uploadDiv.classList.add('hidden');
    }
  });

  async function uploadFile(user) {
    const file = fileInput.files[0];
    if (!file) return alert("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª!");
    const storageRef = ref(storage, `${user.uid}/${file.name}`);
    await uploadBytes(storageRef, file);
    alert("‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω!");
    loadFiles(user);
  }

  async function loadFiles(user) {
    fileList.innerHTML = '–ó–∞–≥—Ä—É–∑–∫–∞...';
    const userRef = ref(storage, user.uid);
    const res = await listAll(userRef);
    fileList.innerHTML = '';
    for (const item of res.items) {
      const url = await getDownloadURL(item);
      const li = document.createElement('li');
      li.innerHTML = `<a href="${url}" target="_blank">${item.name}</a>`;
      fileList.appendChild(li);
    }
  }

  uploadBtn.onclick = () => uploadFile(auth.currentUser);
</script>

</body>
</html>

